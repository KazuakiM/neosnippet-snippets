# Debug message {{{
snippet deb
	debugger;
snippet log
	console.log(${0:message});
snippet logo
	console.log(JSON.stringify(${0:object}));
snippet logg
	console.dir(${0:object});
snippet logtrace
	console.trace(${0:value});
snippet logcount
	console.count(${0:value});
#}}}
# Function {{{
snippet function
	${1:var }${2}: function(${3:attribute}) {
		//{{{
		${0://code...}
		//}}}
	}${4:,}
snippet proto
	${1:class_name}.prototype.${2:method_name} = function(${3:attribute}) {
		//{{{
		${0://code...}
		//}}}
	};
#}}}
# for {{{
snippet for
	for (var ${1:index} = 0; $1 < ${2:Things}.length; ++$1) {
		${0://code...}
	}
snippet forin
	for (var ${1:index} in ${2:#:Things}) {
		${0://code...}
	}
#}}}
# while {{{
snippet while
	while (${1:/* condition */}) {
		${0://code...}
	}
#}}}
# if {{{
snippet if
	if (${1:/* condition */}) {
		${0://code...}
	}
snippet else
	else {
		${0://code...}
	}
snippet elseif
	else if (${1:/* condition */}) {
		${0://code...}
	}
#}}}
# switch {{{
snippet switch
	switch (${1:variable}) {
	case '${2:/* condition */}':
		${0://code...}
		break;
	default:
		break;
	}
snippet case
	case '${1:/* condition */}':
		${0://code...}
		break;
#}}}
# try {{{
snippet throw
	throw ${0://message...};
snippet try
	try {
		${0://code...}
	} catch (Exception $e) {
		$$e->getMessage()
	}
snippet finally
	finally {
	}
#}}}
# vim:fdl=0
